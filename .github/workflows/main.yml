# The pipelines defined in this file define a Continuous Delivery
# environment where every push and pull request to `master`
# runs the linter, tests and builds the application.

name: Main

on:
    push:
        branches:
            - master
    pull_request:
        branches:
            - master

jobs:
    cancel-run:
        name: Cancel previous runs
        runs-on: ubuntu-latest
        steps:
            - name: Cancel previous runs
              uses: styfle/cancel-workflow-action@0.5.0
              with:
                  access_token: ${{ github.token }}

    lint:
        name: Lint
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v2
            - name: Get yarn cache directory path
              id: yarn-cache-dir-path
              run: echo "::set-output name=dir::$(yarn cache dir)"
            - name: Restore yarn cache
              uses: actions/cache@v1
              id: yarn-cache
              with:
                  path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
                  key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-
            - name: Install dependencies
              run: yarn
            - name: Run linter
              run: yarn lint

    check-types:
        name: Type checking
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v2
            - name: Get yarn cache directory path
              id: yarn-cache-dir-path
              run: echo "::set-output name=dir::$(yarn cache dir)"
            - name: Restore yarn cache
              uses: actions/cache@v1
              id: yarn-cache
              with:
                  path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
                  key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-
            - name: Install dependencies
              run: yarn
            - name: Run type checking
              run: yarn check-types

    test:
        name: Unit tests
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v2
            - name: Get yarn cache directory path
              id: yarn-cache-dir-path
              run: echo "::set-output name=dir::$(yarn cache dir)"
            - name: Restore yarn cache
              uses: actions/cache@v1
              id: yarn-cache
              with:
                  path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
                  key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-
            - name: Install dependencies
              run: yarn
            - name: Run unit tests
              run: yarn test
              env:
                  CI: true
            - name: Archive test report
              uses: actions/upload-artifact@v1.0.0
              with:
                  name: coverage
                  path: coverage

    build:
        name: Build
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v2
            - name: Get yarn cache directory path
              id: yarn-cache-dir-path
              run: echo "::set-output name=dir::$(yarn cache dir)"
            - name: Restore yarn cache
              uses: actions/cache@v1
              id: yarn-cache
              with:
                  path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
                  key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-
            - name: Install dependencies
              run: yarn
            - name: Run build
              run: yarn build
